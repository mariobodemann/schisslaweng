#!/bin/bash

if [ -e /tmp/ ]; then
	OUT_PATH=/tmp
else
	OUT_PATH="$HOME/.schisslaweng"
	mkdir -p $OUT_PATH
fi

NEXT="$1"
shift

# Next is a file?
if [ ! -z ${NEXT} -a -e ${NEXT} ]; then
	echo Overwriting base panel url with file
	NEXT="$(cat ${NEXT})"
fi

# Next is a url?
if [ -z "${NEXT}" ]; then
	echo guessing next url
	# no, look for a new one by using either old ones or the first ever schisslaweng
	if [ -e "${OUT_PATH}/last.panel" ]; then
		echo using last one
		LAST="$(cat ${OUT_PATH}/last.panel)"
	else
		echo starting from scratch
		LAST="https://www.schisslaweng.net/mach-doch-mal/"
	fi

	ALL="$(curl --silent 'https://wrapapi.com/use/mariobodemann/schisslaweng/all/latest?wrapAPIKey=7UF1tvyFxs4TXQDYq4btuIIfIuHvbSdz' | jq -r .[])"
	NEXT="$(echo $ALL | tr ' ' '\n' |  sort --random-sort | head -1 | basename "$(cat /dev/stdin)")"
fi

echo $NEXT found
PANELS="$(curl --silent "https://wrapapi.com/use/mariobodemann/schisslaweng/get/latest?wrapAPIKey=7UF1tvyFxs4TXQDYq4btuIIfIuHvbSdz&id=$NEXT" | jq -r .[] | tr ' ' '\n')"
NUM_PANELS=$(echo $PANELS | tr ' ' '\n' | wc -l)
echo $NUM_PANELS panels found


if [ "$NUM_PANELS" -le "0" ]; then
	echo "Could not find panels for $NEXT."
	exit -1
elif [ "$NUM_PANELS" -gt "1" ]; then
	montage -background none -tile 2x -geometry +10+10 $PANELS ${OUT_PATH}/panels.png
else
	curl --silent $PANELS | convert - ${OUT_PATH}/panels.png
fi

if [ ! -z "${SCHISSLAWENG_SHOW}" ]; then
	${SCHISSLAWENG_SHOW} ${OUT_PATH}/panels.png
else
	echo "Done. See file://${OUT_PATH}/panels.png"
fi
